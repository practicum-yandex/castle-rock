version: "3"
services:
  my-app:
    build:
      context: .
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    restart: always
    networks:
      - awesome
  postgres:
    container_name: postgres
    image: postgres:12
    ports:
      - "5432:5432"
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      # Если у вас есть схема БД, которую можно подгрузить на старте, — передайте её
      # - ./src/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: newPassword
      POSTGRES_DB: db-game
    networks:
      - awesome
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.18
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - awesome
  nginx:
    # используем последний стабильный образ nginx
    image: nginx:latest
    # маршрутизируем порты
    ports:
        - "80:80"
        - "443:443"
    # монтируем директории, слева директории на основной машине, справа - куда они монтируются в контейнере
    volumes:
        - ./hosts:/etc/nginx/conf.d
        - ./www:/var/www
        - ./dist:/var/www/html/dist
        - ./logs/nginx:/var/log/nginx
        - ./nginx.conf:/etc/nginx/nginx.conf
        - /etc/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - my-app

volumes:
    pgadmin-data:

networks:
    awesome:
        driver: bridge